plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.compose)
    alias(libs.plugins.kotlin)
    alias(libs.plugins.gradle.plugin.secret)
    alias(libs.plugins.ksp)
    alias(libs.plugins.kotlin.seralization)
}

android {
    namespace 'com.example.asteroidapp'
    compileSdk 35

    defaultConfig {
        applicationId "com.example.asteroidapp"
        minSdkVersion 24
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", "Asteroid App" + "_v_" + defaultConfig.versionName)

    }

    lintOptions {
        disable("NotificationPermission")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    secrets {
        // Optionally specify a different file name containing your secrets.
        // The plugin defaults to "local.properties"
        propertiesFileName = "secrets.properties"

        // A properties file containing default secret values. This file can be
        // checked in version control.
        defaultPropertiesFileName = "local.defaults.properties"

        // Configure which keys should be ignored by the plugin by providing regular expressions.
        // "sdk.dir" is ignored by default.
        ignoreList.add("keyToIgnore") // Ignore the key "keyToIgnore"
        ignoreList.add("sdk.*")       // Ignore all keys matching the regexp "sdk.*"
    }
}

dependencies {

    // Core with Ktx
    implementation libs.androidx.core.ktx

    // Compose
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.activity.compose)
    implementation(libs.androidx.material3)
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.tooling)
    implementation(libs.androidx.ui.tooling.preview)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.lifecycle.viewmodel.compose)
    implementation(libs.androidx.navigation.compose)

    // ViewModel and LiveData
    implementation libs.androidx.lifecycle.viewmodel.ktx

    // MultiDex
    implementation libs.multidex

    // Coil
    implementation(libs.coil.compose)
    implementation(libs.coil.network.okhttp)

    // WorkManager
    implementation libs.andoidx.work

    // Room database
    implementation libs.room.runtime
    ksp libs.room.compiler
    // Kotlin Extensions and Coroutines support for Room
    implementation libs.room.ktx
    implementation libs.room.paging

    // Paging 3
    implementation libs.paging.runtime
    implementation(libs.androidx.paging.compose)

    // Retrofit with Moshi Converter
    implementation libs.retrofit
    implementation libs.retrofit.converter.moshi
    implementation libs.retrofit.converter.scalar
    implementation libs.okhttp3.logging.interceptor

    // Moshi
    implementation libs.moshi.kotlin
    ksp libs.moshi.codegen

    // Kotlin Serialization
    implementation libs.kotlin.serialization

    // Timber
    implementation libs.timber

    // Tests
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // Koin
    implementation libs.koin.android
    implementation libs.koin.core
    implementation libs.koin.androidx.compose
    implementation libs.koin.compat
    // Jetpack WorkManager
    implementation libs.koin.workmanager
    // Navigation Graph
    implementation libs.koin.navigation

}
